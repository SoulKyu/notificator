# Default values for notificator

# Backend service configuration
backend:
  image:
    repository: soulkyu/notificator-backend
    tag: latest
    pullPolicy: IfNotPresent
  
  # Additional labels and annotations for backend resources
  labels: {}
    # environment: production
    # team: platform
  annotations: {}
    # prometheus.io/scrape: "true"
    # prometheus.io/port: "8080"
  
  # Pod-specific annotations and labels
  podLabels: {}
  podAnnotations: {}
    # sidecar.istio.io/inject: "true"
  
  # Service-specific annotations and labels  
  service:
    labels: {}
    annotations: {}
      # service.beta.kubernetes.io/aws-load-balancer-type: nlb
  
  # Security contexts
  podSecurityContext: {}
    # runAsNonRoot: true
    # runAsUser: 1001
    # runAsGroup: 1001
    # fsGroup: 1001
  securityContext: {}
    # allowPrivilegeEscalation: false
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1001
  
  # Service Account
  serviceAccount:
    create: true
    name: ""  # If empty, will generate name automatically
    annotations: {}
      # eks.amazonaws.com/role-arn: arn:aws:iam::ACCOUNT:role/notificator-backend
    labels: {}
  
  # Environment variables for backend configuration
  env: {}
    # Backend service configuration
    # NOTIFICATOR_BACKEND_ENABLED: "true"
    # NOTIFICATOR_BACKEND_GRPC_LISTEN: ":50051"
    # NOTIFICATOR_BACKEND_HTTP_LISTEN: ":8080"
    
    # Database configuration - PostgreSQL URL (recommended)
    # POSTGRES_URL: "postgres://user:password@host:5432/database?sslmode=require"
    
    # Database configuration - Individual PostgreSQL settings
    # NOTIFICATOR_BACKEND_DATABASE_TYPE: "postgres"
    # NOTIFICATOR_BACKEND_DATABASE_HOST: "postgres-service"
    # NOTIFICATOR_BACKEND_DATABASE_PORT: "5432"
    # NOTIFICATOR_BACKEND_DATABASE_NAME: "notificator"
    # NOTIFICATOR_BACKEND_DATABASE_USER: "notificator"
    # NOTIFICATOR_BACKEND_DATABASE_PASSWORD: "notificator_password"
    # NOTIFICATOR_BACKEND_DATABASE_SSL_MODE: "disable"
    
    # Database configuration - SQLite (for development)
    # NOTIFICATOR_BACKEND_DATABASE_TYPE: "sqlite"
    # NOTIFICATOR_BACKEND_DATABASE_SQLITE_PATH: "/data/notificator.db"
    
    # OAuth configuration
    # OAUTH_ENABLED: "false"
    # OAUTH_DISABLE_CLASSIC_AUTH: "false"
    # OAUTH_REDIRECT_URL: "https://notificator.example.com/api/v1/oauth"
    # OAUTH_SESSION_KEY: "change-me-to-a-secure-random-key"
    
    # GitHub OAuth
    # OAUTH_GITHUB_CLIENT_ID: ""
    # OAUTH_GITHUB_CLIENT_SECRET: ""
    # OAUTH_GITHUB_SCOPES: "user:email,read:org,read:user"
    
    # Google OAuth
    # OAUTH_GOOGLE_CLIENT_ID: ""
    # OAUTH_GOOGLE_CLIENT_SECRET: ""
    # OAUTH_GOOGLE_SCOPES: "openid,email,profile,https://www.googleapis.com/auth/admin.directory.group.readonly"

# WebUI service configuration  
webui:
  image:
    repository: soulkyu/notificator-webui
    tag: latest
    pullPolicy: IfNotPresent
  
  # Additional labels and annotations for webui resources
  labels: {}
    # environment: production
    # team: frontend
  annotations: {}
    # prometheus.io/scrape: "true"
    # prometheus.io/port: "8081"
  
  # Pod-specific annotations and labels
  podLabels: {}
  podAnnotations: {}
    # sidecar.istio.io/inject: "true"
  
  # Service-specific annotations and labels
  service:
    labels: {}
    annotations: {}
      # service.beta.kubernetes.io/aws-load-balancer-type: nlb
  
  # Security contexts
  podSecurityContext: {}
    # runAsNonRoot: true
    # runAsUser: 1001
    # runAsGroup: 1001
    # fsGroup: 1001
  securityContext: {}
    # allowPrivilegeEscalation: false
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1001
  
  # Service Account
  serviceAccount:
    create: true
    name: ""  # If empty, will generate name automatically
    annotations: {}
      # eks.amazonaws.com/role-arn: arn:aws:iam::ACCOUNT:role/notificator-webui
    labels: {}
  
  # Backend connection
  backendAddress: notificator-backend:50051
  
  # Environment variables for webui configuration
  env: {}
    # WebUI service configuration
    # BACKEND_ADDRESS: "notificator-backend:50051"
    # NOTIFICATOR_WEBUI_LISTEN: ":8081"
    # NOTIFICATOR_WEBUI_BACKEND: "notificator-backend:50051"
    # NOTIFICATOR_WEBUI_PLAYGROUND: "false"
    
    # Alertmanager configuration (examples)
    # NOTIFICATOR_ALERTMANAGERS_0_NAME: "External Alertmanager"
    # NOTIFICATOR_ALERTMANAGERS_0_URL: "http://alertmanager.monitoring.svc.cluster.local:9093"
    # NOTIFICATOR_ALERTMANAGERS_0_OAUTH_ENABLED: "false"
    # NOTIFICATOR_ALERTMANAGERS_0_OAUTH_PROXY_MODE: "true"
  
  # Ingress configuration
  ingress:
    enabled: true
    className: nginx
    annotations: {}
      # nginx.ingress.kubernetes.io/rewrite-target: /
      # nginx.ingress.kubernetes.io/ssl-redirect: "true"
      # cert-manager.io/cluster-issuer: letsencrypt-prod
    host: notificator.example.com
    path: /
    pathType: Prefix
    tls:
      enabled: false
      secretName: notificator-tls

# Alertmanager configuration (optional - disabled by default)
alertmanager:
  enabled: false
  image:
    repository: soulkyu/notificator-alertmanager
    tag: latest
    pullPolicy: IfNotPresent
  
  # Additional labels and annotations for alertmanager resources
  labels: {}
    # environment: production
    # team: sre
  annotations: {}
    # prometheus.io/scrape: "true"
    # prometheus.io/port: "9093"
  
  # Pod-specific annotations and labels
  podLabels: {}
  podAnnotations: {}
    # sidecar.istio.io/inject: "false"
  
  # Service-specific annotations and labels
  service:
    labels: {}
    annotations: {}
      # service.beta.kubernetes.io/aws-load-balancer-type: nlb
  
  # Security contexts
  podSecurityContext: {}
    # runAsNonRoot: true
    # runAsUser: 1001
    # runAsGroup: 1001
    # fsGroup: 1001
  securityContext: {}
    # allowPrivilegeEscalation: false
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1001

# Shared alertmanager configuration
# When alertmanager.enabled=false, configure external alertmanagers here
# When alertmanager.enabled=true, the internal one will be added automatically
alertmanagerConfig:
  - name: "External Alertmanager"
    url: "http://alertmanager.monitoring.svc.cluster.local:9093"
    username: ""
    password: ""
    token: ""
    oauthEnabled: false
    oauthProxyMode: true


# Common settings
logLevel: info
playground: false
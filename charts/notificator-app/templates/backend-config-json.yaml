apiVersion: v1
kind: ConfigMap
metadata:
  name: notificator-backend-config-json
  labels:
    app: notificator-backend
    component: config
    {{- with .Values.backend.labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  {{- with .Values.backend.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
data:
  config.json: |
    {
      "alertmanagers": [
        {{- $first := true }}
        {{- if .Values.alertmanager.enabled }}
        {{- if not $first }},{{- end }}
        {
          "name": "Internal Alertmanager",
          "url": "http://notificator-alertmanager:9093",
          "username": "",
          "password": "",
          "token": "",
          "headers": {},
          "oauth": {
            "enabled": false,
            "proxy_mode": true
          }
        }
        {{- $first = false }}
        {{- end }}
        {{- range $index, $am := .Values.alertmanagerConfig }}
        {{- if not $first }},{{- end }}
        {
          "name": {{ $am.name | quote }},
          "url": {{ $am.url | quote }},
          "username": {{ $am.username | quote }},
          "password": {{ $am.password | quote }},
          "token": {{ $am.token | quote }},
          "headers": {},
          "oauth": {
            "enabled": {{ $am.oauthEnabled }},
            "proxy_mode": {{ $am.oauthProxyMode }}
          }
        }
        {{- $first = false }}
        {{- end }}
      ],
      "backend": {
        "enabled": true,
        "grpc_listen": ":50051",
        "grpc_client": "localhost:50051",
        "http_listen": ":8080",
        "database": {
          "type": {{ .Values.backend.database.type | quote }},
          {{- if eq .Values.backend.database.type "postgres" }}
          "host": {{ .Values.backend.database.postgres.host | quote }},
          "port": {{ .Values.backend.database.postgres.port }},
          "name": {{ .Values.backend.database.postgres.database | quote }},
          "user": {{ .Values.backend.database.postgres.user | quote }},
          "password": {{ .Values.backend.database.postgres.password | quote }},
          "ssl_mode": {{ .Values.backend.database.postgres.sslMode | quote }}
          {{- else }}
          "sqlite_path": {{ .Values.backend.database.sqlite.path | quote }}
          {{- end }}
        }
      },
      "gui": {
        "width": 1920,
        "height": 1080,
        "title": "Notificator - Alert Dashboard",
        "filter_state": {
          "search_text": "",
          "selected_severities": {"All": true},
          "selected_statuses": {"All": true},
          "selected_teams": {"All": true},
          "selected_acks": {"All": true},
          "selected_comments": {"All": true}
        },
        "minimize_to_tray": false,
        "start_minimized": false,
        "show_tray_icon": false,
        "background_mode": true
      },
      "notifications": {
        "enabled": true,
        "sound_enabled": true,
        "sound_path": "",
        "audio_output_device": "",
        "show_system": true,
        "critical_only": false,
        "max_notifications": 5,
        "cooldown_seconds": 300,
        "severity_rules": {
          "critical": true,
          "warning": true,
          "info": false,
          "unknown": false
        },
        "respect_filters": true
      },
      "polling": {
        "interval": 30000000000
      },
      "resolved_alerts": {
        "enabled": true,
        "notifications_enabled": true,
        "retention_duration": 3600000000000
      },
      "webui": {
        "playground": {{ .Values.playground }}
      },
      {{- if .Values.oauth.enabled }}
      "oauth": {
        "enabled": true,
        "disable_classic_auth": {{ .Values.oauth.disableClassicAuth }},
        "redirect_url": {{ .Values.oauth.redirectUrl | quote }},
        "session_key": {{ .Values.oauth.sessionKey | quote }},
        "debug": false,
        "log_level": {{ .Values.logLevel | quote }},
        "providers": {
          {{- $first := true }}
          {{- if .Values.oauth.github.enabled }}
          {{- if not $first }},{{- end }}
          "github": {
            "enabled": true,
            "client_id": {{ .Values.oauth.github.clientId | quote }},
            "client_secret": {{ .Values.oauth.github.clientSecret | quote }},
            "scopes": {{ .Values.oauth.github.scopes | split "," | toJson }},
            "auth_url": "https://github.com/login/oauth/authorize",
            "token_url": "https://github.com/login/oauth/access_token",
            "user_info_url": "https://api.github.com/user",
            "groups_url": "https://api.github.com/user/orgs",
            "group_scopes": ["read:org"],
            "group_mapping": {
              "owner": "administrator",
              "admin": "administrator",
              "maintainer": "editor",
              "member": "viewer"
            }
          }
          {{- $first = false }}
          {{- end }}
          {{- if .Values.oauth.google.enabled }}
          {{- if not $first }},{{- end }}
          "google": {
            "enabled": true,
            "client_id": {{ .Values.oauth.google.clientId | quote }},
            "client_secret": {{ .Values.oauth.google.clientSecret | quote }},
            "scopes": {{ .Values.oauth.google.scopes | split "," | toJson }},
            "auth_url": "https://accounts.google.com/o/oauth2/auth",
            "token_url": "https://oauth2.googleapis.com/token",
            "user_info_url": "https://openidconnect.googleapis.com/v1/userinfo",
            "groups_url": "https://admin.googleapis.com/admin/directory/v1/groups",
            "group_scopes": ["https://www.googleapis.com/auth/admin.directory.group.readonly"],
            "group_mapping": {
              "admin": "administrator",
              "editor": "editor",
              "viewer": "viewer"
            }
          }
          {{- end }}
        },
        "group_sync": {
          "enabled": true,
          "sync_on_login": true,
          "cache_timeout": 3600000000000,
          "default_role": "viewer",
          "validate_groups": true,
          "audit_changes": false
        },
        "security": {
          "state_timeout": 600000000000,
          "max_auth_attempts": 5,
          "rate_limit": "10/minute",
          "require_https": true,
          "validate_issuer": true,
          "token_encryption": true,
          "csrf_protection": true
        }
      }
      {{- end }}
    }
package components

// Alerts group view
templ AlertsGroupView() {
	<!-- Loading State -->
	<div x-show="loading" class="p-8">
		<div class="animate-pulse space-y-6">
			<template x-for="i in 3" x-key="'group-loading-' + i">
				<div class="border border-gray-200 dark:border-dark-border-subtle rounded-lg p-4">
					<div class="h-6 bg-gray-200 dark:bg-dark-bg-tertiary rounded w-1/4 mb-4"></div>
					<div class="space-y-2">
						<div class="h-4 bg-gray-200 dark:bg-dark-bg-tertiary rounded"></div>
						<div class="h-4 bg-gray-200 dark:bg-dark-bg-tertiary rounded w-3/4"></div>
					</div>
				</div>
			</template>
		</div>
	</div>

	<!-- Empty State -->
	<div x-show="!loading && groups.length === 0" class="text-center py-12">
		<svg class="mx-auto h-12 w-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
			<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"/>
		</svg>
		<h3 class="mt-2 text-sm font-medium text-gray-900 dark:text-white">No alert groups found</h3>
		<p class="mt-1 text-sm text-gray-500 dark:text-gray-400">Try adjusting your search or filter criteria.</p>
	</div>

	<!-- Groups View -->
	<div x-show="!loading && groups.length > 0" class="p-6 space-y-6">
		<template x-for="group in groups" x-key="group.groupName">
			<div class="border border-gray-200 dark:border-dark-border-subtle rounded-lg overflow-hidden">
				<!-- Group Header -->
				<div class="bg-gray-50 dark:bg-dark-bg-secondary px-6 py-4 border-b border-gray-200 dark:border-dark-border-subtle">
					<div class="flex items-center justify-between">
						<div class="flex items-center space-x-3">
							<input type="checkbox" 
								   :checked="selectedGroups.includes(group.groupName)"
								   @change="toggleGroup(group.groupName)"
								   class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded">
							
							<h3 class="text-lg font-medium text-gray-900 dark:text-white" x-text="group.groupName"></h3>
							
							<span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium"
								  :class="{
									  'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200': group.worstSeverity === 'critical',
									  'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200': group.worstSeverity === 'warning',
									  'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200': group.worstSeverity === 'info'
								  }"
								  x-text="group.worstSeverity?.toUpperCase()">
							</span>
							
							<span class="inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-gray-100 text-gray-800 dark:bg-dark-bg-tertiary dark:text-gray-200"
								  x-text="group.count + ' alerts'">
							</span>
						</div>
						
						<div class="flex items-center space-x-2">
							<button @click="acknowledgeGroup(group.groupName)" 
									class="inline-flex items-center px-3 py-1.5 border border-green-300 text-sm leading-4 font-medium rounded text-green-700 bg-green-50 hover:bg-green-100">
								<svg class="h-4 w-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"/>
								</svg>
								Ack Group
							</button>
							
							<!-- Silence Group Button (show when group has unsilenced alerts) -->
							<button @click="silenceGroup(group.groupName)" 
									x-show="!isGroupFullySilenced(group)"
									class="inline-flex items-center px-3 py-1.5 border border-purple-300 text-sm leading-4 font-medium rounded text-purple-700 bg-purple-50 hover:bg-purple-100">
								<!-- Heroicon: speaker-x-mark -->
								<svg class="h-4 w-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
									<path stroke-linecap="round" stroke-linejoin="round" d="M17.25 9.75 19.5 12m0 0 2.25 2.25M19.5 12l2.25-2.25M19.5 12l-2.25 2.25m-10.5-6 4.72-4.72a.75.75 0 0 1 1.28.53v15.88a.75.75 0 0 1-1.28.53l-4.72-4.72H4.51c-.88 0-1.59-.79-1.59-1.78V9.51c0-.88.79-1.59 1.78-1.59h1.78Z"/>
								</svg>
								Silence Group
							</button>
							
							<!-- Unsilence Group Button (show when group has silenced alerts) -->
							<button @click="unsilenceGroup(group.groupName)" 
									x-show="isGroupFullySilenced(group)"
									class="inline-flex items-center px-3 py-1.5 border border-orange-300 text-sm leading-4 font-medium rounded text-orange-700 bg-orange-50 hover:bg-orange-100">
								<!-- Heroicon: speaker-wave -->
								<svg class="h-4 w-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
									<path stroke-linecap="round" stroke-linejoin="round" d="M19.114 5.636a9 9 0 0 1 0 12.728M16.463 8.288a5.25 5.25 0 0 1 0 7.424M6.75 8.25l4.72-4.72a.75.75 0 0 1 1.28.53v15.88a.75.75 0 0 1-1.28.53l-4.72-4.72H4.51c-.88 0-1.59-.79-1.59-1.78V9.51c0-.88.79-1.59 1.78-1.59h1.78Z"/>
								</svg>
								Unsilence Group
							</button>
							
							<button @click="toggleGroupExpanded(group.groupName)" 
									class="text-gray-400 hover:text-gray-600 dark:hover:text-gray-300">
								<svg class="h-5 w-5 transform transition-transform duration-200"
									 :class="{ 'rotate-180': expandedGroups.includes(group.groupName) }"
									 fill="none" stroke="currentColor" viewBox="0 0 24 24">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"/>
								</svg>
							</button>
						</div>
					</div>
				</div>
				
				<!-- Group Content (Expandable) -->
				<div x-show="expandedGroups.includes(group.groupName)" x-transition>
					<div class="overflow-x-auto">
						<table class="min-w-full divide-y divide-gray-200 dark:divide-gray-700">
							<thead class="bg-gray-100 dark:bg-dark-bg-primary">
								<tr>
									<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Alert</th>
									<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Instance</th>
									<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Status</th>
									<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Duration</th>
									<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Actions</th>
								</tr>
							</thead>
							<tbody class="bg-white dark:bg-dark-bg-secondary divide-y divide-gray-200 dark:divide-dark-border-subtle">
								<template x-for="alert in group.alerts" x-key="alert.fingerprint">
									<tr class="hover:bg-gray-50 dark:hover:bg-dark-bg-tertiary cursor-pointer transition-colors"
										@click="if (!$event.target.closest('button')) showAlertDetails(alert.fingerprint)"
										:class="{
											'border-l-4 border-l-severity-critical-light bg-severity-critical-bg-light/20 dark:bg-severity-critical-bg-dark/20 dark:border-l-severity-critical-dark': alert.severity === 'critical' || alert.severity === 'CRITICAL',
											'border-l-4 border-l-severity-critical-daytime-light bg-severity-critical-daytime-bg-light/20 dark:bg-severity-critical-daytime-bg-dark/20 dark:border-l-severity-critical-daytime-dark': alert.severity === 'critical-daytime',
											'border-l-4 border-l-severity-warning-light bg-severity-warning-bg-light/20 dark:bg-severity-warning-bg-dark/20 dark:border-l-severity-warning-dark': alert.severity === 'warning' || alert.severity === 'WARNING',
											'border-l-4 border-l-severity-info-light bg-severity-info-bg-light/20 dark:bg-severity-info-bg-dark/20 dark:border-l-severity-info-dark': alert.severity === 'info' || alert.severity === 'INFO' || alert.severity === 'information' || alert.severity === 'INFORMATION'
										}">
										<td class="px-6 py-4 whitespace-nowrap">
											<div class="text-sm font-medium text-gray-900 dark:text-white" x-text="alert.alertName"></div>
											<div class="text-sm text-gray-500 dark:text-gray-400 truncate max-w-xs" x-text="alert.summary"></div>
										</td>
										<td class="px-6 py-4 whitespace-nowrap">
											<div class="text-sm text-gray-900 dark:text-white" x-text="alert.instance"></div>
										</td>
										<td class="px-6 py-4 whitespace-nowrap">
											<span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium"
												  :class="{
													  'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200': statusMatches(alert.status, 'firing') || statusMatches(alert.status, 'active'),
													  'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200': statusMatches(alert.status, 'resolved'),
													  'bg-purple-100 text-purple-800 dark:bg-purple-900 dark:text-purple-200': statusMatches(alert.status, 'silenced'),
													  'bg-gray-100 text-gray-800 dark:bg-dark-bg-tertiary dark:text-gray-200': !['firing', 'active', 'resolved', 'silenced'].includes(getDisplayStatus(alert.status))
												  }">
												<!-- Fire emoji for active/firing -->
												<span x-show="statusMatches(alert.status, 'firing') || statusMatches(alert.status, 'active')" class="mr-1">ðŸ”¥</span>
												<!-- Mute emoji for silenced -->
												<span x-show="statusMatches(alert.status, 'silenced')" class="mr-1">ðŸ”‡</span>
												<span x-text="(statusMatches(alert.status, 'firing') || statusMatches(alert.status, 'active')) ? 'Active' : 
															statusMatches(alert.status, 'silenced') ? 'Silenced' : 
															statusMatches(alert.status, 'resolved') ? 'Resolved' : 
															getDisplayStatus(alert.status)?.toUpperCase()"></span>
											</span>
										</td>
										<td class="px-6 py-4 whitespace-nowrap">
											<div class="text-sm text-gray-500 dark:text-gray-400" x-text="formatDuration(alert.duration)"></div>
										</td>
										<td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
											<button x-show="!alert.isAcknowledged" @click.stop="acknowledgeAlert(alert.fingerprint)" 
													class="text-green-600 hover:text-green-900 dark:text-green-400 dark:hover:text-green-300 mr-3">
												Ack
											</button>
											<button @click.stop="hideAlert(alert.fingerprint)" 
													class="text-gray-600 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-300">
												Hide
											</button>
										</td>
									</tr>
								</template>
							</tbody>
						</table>
					</div>
				</div>
			</div>
		</template>
	</div>
}
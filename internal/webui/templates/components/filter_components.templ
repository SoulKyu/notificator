package components

// Filter dropdown component
templ FilterDropdown(filterType, title string) {
	<div x-show="open" @click.away="open = false" x-transition
		 class="absolute right-0 mt-2 w-64 rounded-md shadow-lg bg-white dark:bg-dark-bg-secondary ring-1 ring-black ring-opacity-5 z-50"
		 x-data={ "{ filterType: '" + filterType + "', title: '" + title + "' }" }>
		<div class="py-2">
			<div class="px-4 py-2 border-b border-gray-200 dark:border-dark-border-DEFAULT">
				<div class="flex items-center justify-between">
					<span class="text-sm font-medium text-gray-700 dark:text-gray-200" x-text="title"></span>
					<button x-text="`Clear (${$parent.filters[filterType].length})`" 
							@click="$parent.clearFilter(filterType)" 
							class="text-xs text-blue-600 dark:text-blue-400 hover:text-blue-500"
							x-show="$parent.filters[filterType].length > 0">
					</button>
				</div>
			</div>
			<div class="max-h-48 overflow-y-auto">
				<template x-for="option in $parent.metadata.availableFilters[filterType]" x-key="option">
					<label class="flex items-center px-4 py-2 text-sm text-gray-700 dark:text-gray-200 hover:bg-gray-100 dark:hover:bg-dark-bg-tertiary cursor-pointer">
						<input type="checkbox" 
							   x-model="$parent.filters[filterType]" 
							   :value="option" 
							   @change="$parent.applyFilters()"
							   class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded mr-3">
						<span class="flex items-center">
							<div x-show="filterType === 'severities'" class="w-2 h-2 rounded-full mr-2"
								 :class="{
									 'bg-red-500': option === 'critical' || option === 'CRITICAL',
									 'bg-rose-500': option === 'critical-daytime',
									 'bg-amber-500': option === 'warning' || option === 'WARNING', 
									 'bg-blue-500': option === 'info' || option === 'INFO' || option === 'information' || option === 'INFORMATION'
								 }"></div>
							<div x-show="filterType === 'statuses'" class="flex items-center mr-2">
								<div x-show="option !== 'silenced'" class="w-2 h-2 rounded-full"
									 :class="{
										 'bg-red-500': option === 'firing',
										 'bg-green-500': option === 'resolved'
									 }"></div>
								<!-- Heroicon: speaker-x-mark -->
								<svg x-show="option === 'silenced'" class="w-3 h-3 text-orange-600" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" fill="none" title="Silenced alerts are muted by active silences">
									<path stroke-linecap="round" stroke-linejoin="round" d="M17.25 9.75 19.5 12m0 0 2.25 2.25M19.5 12l2.25-2.25M19.5 12l-2.25 2.25m-10.5-6 4.72-4.72a.75.75 0 0 1 1.28.53v15.88a.75.75 0 0 1-1.28.53l-4.72-4.72H4.51c-.88 0-1.59-.79-1.59-1.78V9.51c0-.88.79-1.59 1.78-1.59h1.78Z" />
								</svg>
							</div>
							<span x-text="option === 'firing' ? 'Active' : 
										option === 'silenced' ? 'Silenced' : 
										option === 'resolved' ? 'Resolved' : 
										option"></span>
						</span>
					</label>
				</template>
			</div>
		</div>
	</div>
}

// Active filter tags
templ ActiveFilterTags() {
	<!-- Alertmanager Filter Tags -->
	<template x-for="am in filters.alertmanagers" x-key="'am-' + am">
		<span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800 dark:bg-dark-bg-secondary dark:text-gray-200">
			<span x-text="'AM: ' + am"></span>
			<button @click="removeFilter('alertmanagers', am)" class="ml-1 inline-flex items-center p-0.5 hover:opacity-75">
				<!-- Heroicon: x-mark -->
				<svg class="w-3 h-3" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" fill="none">
					<path stroke-linecap="round" stroke-linejoin="round" d="M6 18 18 6M6 6l12 12" />
				</svg>
			</button>
		</span>
	</template>

	<!-- Severity Filter Tags -->
	<template x-for="severity in filters.severities" x-key="'sev-' + severity">
		<span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium"
			  :class="{
				  'bg-severity-critical-bg-light text-severity-critical-text-light dark:bg-severity-critical-bg-dark dark:text-severity-critical-text-dark': severity === 'critical' || severity === 'CRITICAL',
				  'bg-severity-critical-daytime-bg-light text-severity-critical-daytime-text-light dark:bg-severity-critical-daytime-bg-dark dark:text-severity-critical-daytime-text-dark': severity === 'critical-daytime',
				  'bg-severity-warning-bg-light text-severity-warning-text-light dark:bg-severity-warning-bg-dark dark:text-severity-warning-text-dark': severity === 'warning' || severity === 'WARNING',
				  'bg-severity-info-bg-light text-severity-info-text-light dark:bg-severity-info-bg-dark dark:text-severity-info-text-dark': severity === 'info' || severity === 'INFO' || severity === 'information' || severity === 'INFORMATION',
				  'bg-gray-100 text-gray-800 dark:bg-dark-bg-tertiary dark:text-gray-200': !['critical', 'CRITICAL', 'critical-daytime', 'CRITICAL-DAYTIME', 'warning', 'WARNING', 'info', 'INFO', 'information', 'INFORMATION'].includes(severity)
			  }">
			<span class="w-2 h-2 rounded-full mr-1.5"
				  :class="{
					  'bg-severity-critical-light dark:bg-severity-critical-dark': severity === 'critical' || severity === 'CRITICAL',
					  'bg-severity-critical-daytime-light dark:bg-severity-critical-daytime-dark': severity === 'critical-daytime',
					  'bg-severity-warning-light dark:bg-severity-warning-dark': severity === 'warning' || severity === 'WARNING',
					  'bg-severity-info-light dark:bg-severity-info-dark': severity === 'info' || severity === 'INFO' || severity === 'information' || severity === 'INFORMATION',
					  'bg-gray-500': !['critical', 'CRITICAL', 'critical-daytime', 'CRITICAL-DAYTIME', 'warning', 'WARNING', 'info', 'INFO', 'information', 'INFORMATION'].includes(severity)
				  }"></span>
			<span x-text="severity.charAt(0).toUpperCase() + severity.slice(1)"></span>
			<button @click="removeFilter('severities', severity)" class="ml-1 inline-flex items-center p-0.5 hover:opacity-75">
				<!-- Heroicon: x-mark -->
				<svg class="w-3 h-3" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" fill="none">
					<path stroke-linecap="round" stroke-linejoin="round" d="M6 18 18 6M6 6l12 12" />
				</svg>
			</button>
		</span>
	</template>

	<!-- Status Filter Tags -->
	<template x-for="status in filters.statuses" x-key="'status-' + status">
		<span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium"
			  :class="{
				  'bg-red-100 text-red-800 dark:bg-red-800 dark:text-red-200': status === 'firing',
				  'bg-green-100 text-green-800 dark:bg-green-800 dark:text-green-200': status === 'resolved',
				  'bg-orange-100 text-orange-800 dark:bg-orange-800 dark:text-orange-200': status === 'silenced'
			  }">
			<span class="flex items-center mr-1.5">
				<span x-show="status !== 'silenced'" class="w-2 h-2 rounded-full"
					  :class="{
						  'bg-red-500': status === 'firing',
						  'bg-green-500': status === 'resolved'
					  }"></span>
				<svg x-show="status === 'silenced'" class="w-3 h-3 text-orange-600" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" fill="none" title="Silenced">
					<path stroke-linecap="round" stroke-linejoin="round" d="M17.25 9.75 19.5 12m0 0 2.25 2.25M19.5 12l2.25-2.25M19.5 12l-2.25 2.25m-10.5-6 4.72-4.72a.75.75 0 0 1 1.28.53v15.88a.75.75 0 0 1-1.28.53l-4.72-4.72H4.51c-.88 0-1.59-.79-1.59-1.78V9.51c0-.88.79-1.59 1.78-1.59h1.78Z" />
				</svg>
			</span>
			<span x-text="status === 'firing' ? 'Active' : 
						status === 'silenced' ? 'Silenced' : 
						status === 'resolved' ? 'Resolved' : 
						status.charAt(0).toUpperCase() + status.slice(1)"></span>
			<button @click="removeFilter('statuses', status)" class="ml-1 inline-flex items-center p-0.5 hover:opacity-75">
				<!-- Heroicon: x-mark -->
				<svg class="w-3 h-3" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" fill="none">
					<path stroke-linecap="round" stroke-linejoin="round" d="M6 18 18 6M6 6l12 12" />
				</svg>
			</button>
		</span>
	</template>

	<!-- Team Filter Tags -->
	<template x-for="team in filters.teams" x-key="'team-' + team">
		<span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-purple-100 text-purple-800 dark:bg-purple-800 dark:text-purple-200">
			<span x-text="'Team: ' + team"></span>
			<button @click="removeFilter('teams', team)" class="ml-1 inline-flex items-center p-0.5 hover:opacity-75">
				<!-- Heroicon: x-mark -->
				<svg class="w-3 h-3" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" fill="none">
					<path stroke-linecap="round" stroke-linejoin="round" d="M6 18 18 6M6 6l12 12" />
				</svg>
			</button>
		</span>
	</template>
}
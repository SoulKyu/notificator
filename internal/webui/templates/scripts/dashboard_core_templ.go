// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.906
package scripts

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func DashboardCore() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<script>\n\t\tfunction newDashboard() {\n\t\t\treturn {\n\t\t\t\tloading: true,\n\t\t\t\talerts: [],\n\t\t\t\tgroups: [],\n\t\t\t\tmetadata: {\n\t\t\t\t\ttotalAlerts: 0,\n\t\t\t\t\tfilteredCount: 0,\n\t\t\t\t\tlastUpdate: null,\n\t\t\t\t\tcounters: {\n\t\t\t\t\t\tcritical: 0,\n\t\t\t\t\t\twarning: 0,\n\t\t\t\t\t\tinfo: 0,\n\t\t\t\t\t\tfiring: 0,\n\t\t\t\t\t\tresolved: 0,\n\t\t\t\t\t\tacknowledged: 0,\n\t\t\t\t\t\twithComments: 0\n\t\t\t\t\t},\n\t\t\t\t\tavailableFilters: {\n\t\t\t\t\t\talertmanagers: [],\n\t\t\t\t\t\tseverities: [],\n\t\t\t\t\t\tstatuses: [],\n\t\t\t\t\t\tteams: []\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tsettings: {\n\t\t\t\t\ttheme: 'light',\n\t\t\t\t\tresolvedAlertsRetention: 1,\n\t\t\t\t\trefreshInterval: 5,\n\t\t\t\t\tresolvedAlertsLimit: 100\n\t\t\t\t},\n\t\t\t\t\n\t\t\t\tisRemovingResolvedAlerts: false,\n\t\t\t\t\n\t\t\t\thasInitiallyLoaded: false,\n\t\t\t\tsessionStorageKey: 'dashboard_notification_state',\n\t\t\t\t\n\t\t\t\tdisplayMode: 'classic',\n\t\t\t\tviewMode: 'list',\n\t\t\t\tsortField: 'duration',\n\t\t\t\tsortDirection: 'asc',\n\t\t\t\tshowSettings: false,\n\t\t\t\t\n\t\t\t\tshowAckModal: false,\n\t\t\t\tackAction: 'single',\n\t\t\t\tackReason: '',\n\t\t\t\tackError: '',\n\t\t\t\tackSubmitting: false,\n\t\t\t\tcurrentAckAlert: null,\n\t\t\t\tcurrentGroupName: '',\n\t\t\t\t\n\t\t\t\tshowSilenceModal: false,\n\t\t\t\tsilenceAction: 'single',\n\t\t\t\tsilenceReason: '',\n\t\t\t\tsilenceError: '',\n\t\t\t\tsilenceSubmitting: false,\n\t\t\t\tcurrentSilenceAlert: null,\n\t\t\t\tsilenceDuration: '1h',\n\t\t\t\tsilenceDurationType: 'preset',\n\t\t\t\tcustomSilenceDuration: '',\n\t\t\t\tcustomDurationError: '',\n\t\t\t\t\n\t\t\t\tshowAlertModal: false,\n\t\t\t\talertDetails: null,\n\t\t\t\tcurrentAlertTab: 'overview',\n\t\t\t\talertDetailsLoading: false,\n\t\t\t\t\n\t\t\t\t// Variables needed for injected standalone alert content\n\t\t\t\talertId: null,\n\t\t\t\terror: null,\n\t\t\t\tcurrentTab: 'overview',\n\t\t\t\tloading: false, // Maps to alertDetailsLoading for injected content\n\t\t\t\t\n\t\t\t\tnewCommentContent: '',\n\t\t\t\tcommentSubmitting: false,\n\t\t\t\tcommentDeleting: {},\n\t\t\t\tcurrentUser: null,\n\t\t\t\t\n\t\t\t\tsearchQuery: '',\n\t\t\t\tfilters: {\n\t\t\t\t\talertmanagers: [],\n\t\t\t\t\tseverities: [],\n\t\t\t\t\tstatuses: [],\n\t\t\t\t\tteams: []\n\t\t\t\t},\n\t\t\t\tacknowledgmentFilter: null,\n\t\t\t\tcommentsFilter: null,\n\t\t\t\t\n\t\t\t\tselectedAlerts: [],\n\t\t\t\tselectedGroups: [],\n\t\t\t\texpandedGroups: [],\n\t\t\t\t\n\t\t\t\trefreshInterval: null,\n\t\t\t\tlastUpdateTime: null,\n\t\t\t\t\n\t\t\t\talertColors: {},\n\t\t\t\talertColorsTimestamp: 0,\n\t\t\t\t\n\t\t\t\tcolumnWidths: {\n\t\t\t\t\talertName: 300,\n\t\t\t\t\taction: 100,\n\t\t\t\t\tinstance: 350,\n\t\t\t\t\tseverity: 150,\n\t\t\t\t\tstatus: 150,\n\t\t\t\t\tcomments: 130,\n\t\t\t\t\tteam: 200,\n\t\t\t\t\tsummary: 400,\n\t\t\t\t\tduration: 150,\n\t\t\t\t\tsource: 180\n\t\t\t\t},\n\t\t\t\tisResizing: false,\n\t\t\t\tstartX: 0,\n\t\t\t\tstartWidth: 0,\n\t\t\t\tcurrentColumn: null,\n\n\t\t\t\tgetDisplayStatus(status) {\n\t\t\t\t\tif (!status?.state) return 'unknown';\n\t\t\t\t\treturn status.state === 'suppressed' ? 'silenced' : status.state;\n\t\t\t\t},\n\n\t\t\t\tstatusMatches(status, value) {\n\t\t\t\t\tconst displayStatus = this.getDisplayStatus(status);\n\t\t\t\t\treturn displayStatus === value;\n\t\t\t\t},\n\n\t\t\t\tinit() {\n\t\t\t\t\tObject.assign(this, window.alertActionsCommonMixin || {});\n\t\t\t\t\tObject.assign(this, window.dashboardDataMixin || {});\n\t\t\t\t\tObject.assign(this, window.dashboardActionsMixin || {});\n\t\t\t\t\tObject.assign(this, window.dashboardNotificationsMixin || {});\n\t\t\t\t\tObject.assign(this, window.dashboardUtilitiesMixin || {});\n\t\t\t\t\tObject.assign(this, window.dashboardModalMixin || {});\n\t\t\t\t\t\n\t\t\t\t\twindow.dashboardInstance = this;\n\t\t\t\t\t\n\t\t\t\t\tthis.initializeSessionTracking();\n\t\t\t\t\t\n\t\t\t\t\tthis.loadSettings();\n\t\t\t\t\tthis.loadFiltersFromURL();\n\t\t\t\t\tthis.loadColumnWidths();\n\t\t\t\t\tthis.loadCurrentUser();\n\t\t\t\t\t\n\t\t\t\t\tif (this.initializeNotificationSystem) {\n\t\t\t\t\t\tthis.initializeNotificationSystem();\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tthis.startAutoRefresh();\n\t\t\t\t\tthis.loadDashboardData();\n\t\t\t\t\t\n\t\t\t\t\tthis.checkAlertFromURL();\n\t\t\t\t\t\n\t\t\t\t\tdocument.addEventListener('visibilitychange', () => {\n\t\t\t\t\t\tif (document.hidden) {\n\t\t\t\t\t\t\tthis.stopAutoRefresh();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.startAutoRefresh();\n\t\t\t\t\t\t\tthis.loadDashboardIncremental();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\tdocument.addEventListener('mousemove', this.handleMouseMove.bind(this));\n\t\t\t\t\tdocument.addEventListener('mouseup', this.handleMouseUp.bind(this));\n\t\t\t\t},\n\n\t\t\t\topenSettings() {\n\t\t\t\t\tthis.showSettings = true;\n\t\t\t\t},\n\t\t\t\t\n\t\t\t\tgetStatusText() {\n\t\t\t\t\tif (this.loading) return 'Loading...';\n\t\t\t\t\tif (this.metadata && this.metadata.lastUpdate) {\n\t\t\t\t\t\treturn `Last updated: ${new Date(this.metadata.lastUpdate).toLocaleTimeString()}`;\n\t\t\t\t\t}\n\t\t\t\t\treturn 'Ready';\n\t\t\t\t},\n\n\t\t\t\tinitializeSessionTracking() {\n\t\t\t\t\tconst sessionData = sessionStorage.getItem(this.sessionStorageKey);\n\t\t\t\t\t\n\t\t\t\t\tif (sessionData) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst data = JSON.parse(sessionData);\n\t\t\t\t\t\t\tthis.hasInitiallyLoaded = data.hasInitiallyLoaded || false;\n\t\t\t\t\t\t\tconsole.log('Session tracking restored - hasInitiallyLoaded:', this.hasInitiallyLoaded);\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tconsole.warn('Failed to parse session data, treating as fresh session');\n\t\t\t\t\t\t\tthis.hasInitiallyLoaded = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.log('Fresh session detected');\n\t\t\t\t\t\tthis.hasInitiallyLoaded = false;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tthis.saveSessionState();\n\t\t\t\t},\n\n\t\t\t\tsaveSessionState() {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst sessionData = {\n\t\t\t\t\t\t\thasInitiallyLoaded: this.hasInitiallyLoaded,\n\t\t\t\t\t\t\ttimestamp: Date.now()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tsessionStorage.setItem(this.sessionStorageKey, JSON.stringify(sessionData));\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tconsole.warn('Failed to save session state:', e);\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tsetDisplayMode(mode) {\n\t\t\t\t\tif (this.displayMode !== mode) {\n\t\t\t\t\t\tthis.displayMode = mode;\n\t\t\t\t\t\tthis.clearSelection();\n\t\t\t\t\t\tthis.loadDashboardData();\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tsetViewMode(mode) {\n\t\t\t\t\tif (this.viewMode !== mode) {\n\t\t\t\t\t\tthis.viewMode = mode;\n\t\t\t\t\t\tthis.clearSelection();\n\t\t\t\t\t\tif (mode === 'group') {\n\t\t\t\t\t\t\tthis.expandedGroups = this.groups.map(g => g.groupName);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.loadDashboardData();\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tstartAutoRefresh() {\n\t\t\t\t\tthis.stopAutoRefresh();\n\t\t\t\t\tthis.refreshInterval = setInterval(() => {\n\t\t\t\t\t\tthis.loadDashboardIncremental();\n\t\t\t\t\t}, this.settings.refreshInterval * 1000);\n\t\t\t\t},\n\n\t\t\t\tstopAutoRefresh() {\n\t\t\t\t\tif (this.refreshInterval) {\n\t\t\t\t\t\tclearInterval(this.refreshInterval);\n\t\t\t\t\t\tthis.refreshInterval = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t</script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
